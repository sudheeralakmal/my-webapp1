{"ast":null,"code":"var _jsxFileName = \"/Users/lakmal/Downloads/storj-s3-presign-react-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(null);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n\n    try {\n      let file = event.target[0].files[0];\n      const url = `http://localhost:3001/presign`;\n      const params = new URLSearchParams({\n        key: file.name\n      });\n      let resp = await fetch(url, {\n        method: \"POST\",\n        body: params\n      });\n      let presignResp = await resp.json();\n      console.log(\"presign resp\", presignResp);\n      resp = await fetch(presignResp.url, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": file.type\n        },\n        body: file\n      });\n      console.log(\"resp\", resp);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GB86ilDv2e+FWPZKEI6FKzMMZ1c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","App","loading","setLoading","onSubmit","event","preventDefault","file","target","files","url","params","URLSearchParams","key","name","resp","fetch","method","body","presignResp","json","console","log","headers","type","err","error"],"sources":["/Users/lakmal/Downloads/storj-s3-presign-react-main/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(null);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    setLoading(true);\n    try {\n      let file = event.target[0].files[0];\n      const url = `http://localhost:3001/presign`;\n      const params = new URLSearchParams({\n        key: file.name,\n      });\n      let resp = await fetch(url, {\n        method: \"POST\",\n        body: params,\n      });\n      let presignResp = await resp.json();\n\n      console.log(\"presign resp\", presignResp);\n\n      resp = await fetch(presignResp.url, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": file.type,\n        },\n        body: file,\n      });\n      console.log(\"resp\", resp);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form onSubmit={onSubmit}>\n          <input type=\"file\" />\n          <br />\n          <button disabled={loading}>Upload!</button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;;EACA,MAAMI,QAAQ,GAAG,MAAOC,KAAP,IAAiB;IAChCA,KAAK,CAACC,cAAN;IAEAH,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,IAAII,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,KAAhB,CAAsB,CAAtB,CAAX;MACA,MAAMC,GAAG,GAAI,+BAAb;MACA,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;QACjCC,GAAG,EAAEN,IAAI,CAACO;MADuB,CAApB,CAAf;MAGA,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAM;QAC1BO,MAAM,EAAE,MADkB;QAE1BC,IAAI,EAAEP;MAFoB,CAAN,CAAtB;MAIA,IAAIQ,WAAW,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAAxB;MAEAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,WAA5B;MAEAJ,IAAI,GAAG,MAAMC,KAAK,CAACG,WAAW,CAACT,GAAb,EAAkB;QAClCO,MAAM,EAAE,KAD0B;QAElCM,OAAO,EAAE;UACP,gBAAgBhB,IAAI,CAACiB;QADd,CAFyB;QAKlCN,IAAI,EAAEX;MAL4B,CAAlB,CAAlB;MAOAc,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;IACD,CAtBD,CAsBE,OAAOU,GAAP,EAAY;MACZJ,OAAO,CAACK,KAAR,CAAcD,GAAd;IACD,CAxBD,SAwBU;MACRtB,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CA/BD;;EAgCA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAAA,uBACE;QAAM,QAAQ,EAAEC,QAAhB;QAAA,wBACE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,QAAQ,EAAEF,OAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA7CQD,G;;KAAAA,G;AA+CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}